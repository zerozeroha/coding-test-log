/**
 * 문제 설명
 * 문자열로 구성된 리스트 `strings`와 정수 `n`이 주어집니다.
 * 각 문자열의 n번째 문자를 기준으로 오름차순 정렬하세요.
 * 만약 같은 문자가 여러 개라면, 사전순으로 정렬합니다.
 *
 * 제한 조건
 * - strings의 길이는 1 이상 50 이하
 * - 문자열은 길이 1 이상 100 이하
 * - 문자열은 소문자 알파벳으로만 구성
 * - 모든 문자열은 n번째 인덱스를 가지고 있음 (n보다 김)
 *
 * 입출력 예
 * strings: ["sun", "bed", "car"], n: 1 → 결과: ["car", "bed", "sun"]
 * strings: ["abce", "abcd", "cdx"], n: 2 → 결과: ["abcd", "abce", "cdx"]
 */

function solution(strings, n) {
  return strings.sort((a, b) => {
    if (a[n] < b[n]) return -1; // a의 n번째 문자가 b보다 앞이면 a가 먼저
    else if (a[n] > b[n]) return 1; // b의 n번째 문자가 앞이면 b가 먼저
    return a < b ? -1 : 1; // n번째 문자가 같으면 전체 문자열 비교 (사전순)
  });
}

/**
 * 💡 헷갈렸던 부분 정리
 *
 * 1. 왜 return a < b ? -1 : 1 을 쓰지?
 *    → 인덱스 n번째 문자가 같을 경우, 전체 문자열을 사전순으로 비교하기 위해 사용합니다.
 *
 * 2. 왜 sort 내부에서 a[n], b[n]을 비교해?
 *    → 주어진 n번째 문자를 기준으로 정렬하라는 요구사항 때문입니다.
 *
 * 3. 왜 -1, 1을 리턴하지?
 *    → 자바스크립트의 sort 함수는 음수면 자리를 바꾸지 않고, 양수면 바꿔서 정렬합니다.
 */
